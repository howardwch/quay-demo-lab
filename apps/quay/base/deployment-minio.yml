apiVersion: v1
data:
  MINIO_ROOT_PASSWORD: bWluaW9hZG1pbg==
  MINIO_ROOT_USER: bWluaW9hZG1pbg==
kind: Secret
metadata:
  creationTimestamp: null
  name: minio-admin
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: minio
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: null
      labels:
        app: minio
        deployment: minio
        version: v1
    spec:
      containers:
      - args:
        - server
        - --console-address
        - :9001
        - /data
        command:
        - /usr/bin/docker-entrypoint.sh
        env:
        - name: MINIO_UPDATE_MINISIGN_PUBKEY
          value: RWTx5Zr1tiHQLwG9keckT0c45M3AGeHD6IvimQHpyRywVWGbP1aVSGav
        - name: MINIO_ACCESS_KEY_FILE
          value: access_key
        - name: MINIO_ROOT_USER_FILE
          value: access_key
        - name: HOSTNAME
          value: minio
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: MINIO_ROOT_PASSWORD
              name: minio-admin
        - name: MINIO_ROOT_PASSWORD_FILE
          value: secret_key
        - name: MINIO_SECRET_KEY_FILE
          value: secret_key
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              key: MINIO_ROOT_USER
              name: minio-admin
        - name: MINIO_CONFIG_ENV_FILE
          value: config.env
        - name: MINIO_PROMETHEUS_URL
          value: http://prometheus:9090
        - name: MINIO_PROMETHEUS_JOB_ID
          value: minio
        image: localhost/minio:latest
        imagePullPolicy: Always
        name: minio
        ports:
        - containerPort: 9000
          protocol: TCP
        - containerPort: 9001
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: minio
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: minio
        persistentVolumeClaim:
          claimName: minio
---
apiVersion: v1
kind: Service
metadata:
  name: minio
spec:
  ports:
  - name: http-9000
    port: 9000
    protocol: TCP
    targetPort: 9000
  - name: http-9001
    port: 9001
    protocol: TCP
    targetPort: 9001
  selector:
    app: minio
  sessionAffinity: None
  type: ClusterIP

